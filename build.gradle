buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'

		junitJupiterVersion = '5.1.0'
		junitPlatformVersion = '1.1.0'


	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'sug.testcontainers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.postgresql:postgresql')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.testcontainers:postgresql:1.6.0')
	testCompile('org.testcontainers:testcontainers:1.6.0')
	testRuntime('org.postgresql:postgresql')



	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testCompile("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
	testCompile("org.junit.platform:junit-platform-engine:${junitPlatformVersion}")
	testCompile("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
	testCompile("org.junit.vintage:junit-vintage-engine:${junitJupiterVersion}")
	testCompile("org.junit.jupiter:junit-jupiter-migrationsupport:${junitJupiterVersion}")
	testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")


	
	
	//testCompile('org.junit')
}
